{"version":3,"file":"static/js/752.470fc8f8.chunk.js","mappings":"0LAEA,MAAMA,EAAU,mCACVC,EAAW,+BASJC,EAAqBC,UAChC,MAAM,KAAEC,SAAeC,EAAAA,EAAMC,IAAI,GAAGL,iBAAyB,CAC3DM,OAAQ,CAAEC,QAASR,EAASS,WAE9B,OAAOL,EAAKM,SAGDC,EAAoBR,UAC/B,MAAM,KAAEC,SAAeC,EAAAA,EAAMC,IAAI,GAAGL,WAAkBW,IAAW,CAC/DL,OAAQ,CAAEC,QAASR,KAErB,OAAOI,GAGIS,EAAiBV,UAC5B,MAAM,KAAEC,SAAeC,EAAAA,EAAMC,IAAI,GAAGL,WAAkBW,YAAmB,CACvEL,OAAQ,CAAEC,QAASR,KAErB,OAAOI,EAAKU,MAGDC,EAAoBZ,UAC/B,MAAM,KAAEC,SAAeC,EAAAA,EAAMC,IAAI,GAAGL,WAAkBW,YAAmB,CACvEL,OAAQ,CAAEC,QAASR,KAErB,OAAOI,EAAKM,Q,qFCjCC,SAASM,IACtB,MAAM,QAAEJ,IAAYK,EAAAA,EAAAA,MACbH,EAAMI,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,MAQnC,OANAG,EAAAA,EAAAA,WAAU,MACRT,EAAAA,EAAAA,IAAeD,GACZW,KAAKL,GACLM,MAAMC,GAAOJ,EAASI,EAAIC,WAC5B,CAACd,IAEAQ,GAAcO,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,yBAAuBR,KACvCN,EAAKe,QAGRC,EAAAA,EAAAA,KAAA,MAAAF,SACGd,EAAKiB,IAAIC,IAAA,IAAC,QAAEC,EAAO,aAAEC,EAAY,KAAEC,EAAI,UAAEC,GAAWJ,EAAA,OACnDL,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGM,IACCJ,EAAAA,EAAAA,KAAA,OACEO,IAAK,kCAAkCH,IACvCI,IAAKH,EACLI,MAAM,MACNC,OAAO,SAGXV,EAAAA,EAAAA,KAAA,KAAAF,UACEE,EAAAA,EAAAA,KAAA,UAAAF,SAASO,OAEXR,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,MAAIQ,OAZAH,QALUH,EAAAA,EAAAA,KAAA,KAAAF,SAAG,2BAsB9B,C","sources":["services/api.js","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '603c177ba1164b029d0f3b31548d47a9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: { api_key: API_KEY },\n  });\n  return data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}/search/movie`, {\n    params: { api_key: API_KEY, query },\n  });\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n    params: { api_key: API_KEY },\n  });\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: { api_key: API_KEY },\n  });\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY },\n  });\n  return data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../services/api';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchMovieCast(movieId)\n      .then(setCast)\n      .catch(err => setError(err.message));\n  }, [movieId]);\n\n  if (error) return <p>Something went wrong: {error}</p>;\n  if (!cast.length) return <p>No cast info available.</p>;\n\n  return (\n    <ul>\n      {cast.map(({ cast_id, profile_path, name, character }) => (\n        <li key={cast_id}>\n          {profile_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n              alt={name}\n              width=\"100\"\n              height=\"150\"\n            />\n          )}\n          <p>\n            <strong>{name}</strong>\n          </p>\n          <p>as {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n"],"names":["API_KEY","BASE_URL","fetchMoviesByQuery","async","data","axios","get","params","api_key","query","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","Cast","useParams","setCast","useState","error","setError","useEffect","then","catch","err","message","_jsxs","children","length","_jsx","map","_ref","cast_id","profile_path","name","character","src","alt","width","height"],"sourceRoot":""}