{"version":3,"file":"static/js/174.8658346c.chunk.js","mappings":"qMAIe,SAASA,IAAU,IAADC,EAC/B,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAAiC,QAA5BP,EAAGI,EAAaI,IAAI,gBAAQ,IAAAR,EAAAA,EAAI,IAE3CS,EAAAA,EAAAA,WAAU,KACR,IAAKF,EAAO,OAEEG,WACZ,IACE,MAAMC,QAAgBC,EAAAA,EAAAA,IAAmBL,GACzCL,EAAUS,EACZ,CAAE,MAAOE,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,GAGFE,IACC,CAACR,IASJ,OACES,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SATWC,IACnBA,EAAEC,iBACF,MAAMC,EAAQF,EAAEG,OAAOC,SAAShB,MAAMc,MAAMG,OACvCH,GACLhB,EAAgB,CAAEE,MAAOc,KAKMJ,SAAA,EAC3BQ,EAAAA,EAAAA,KAAA,SAAOC,KAAK,QAAQC,aAAcpB,KAClCkB,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQX,SAAC,eAGxBQ,EAAAA,EAAAA,KAAA,MAAAR,SACGhB,EAAO4B,IAAIC,IACVL,EAAAA,EAAAA,KAAA,MAAAR,SAAoBa,EAAMC,OAAjBD,EAAME,SAKzB,C,0EC3CA,MAAMC,EAAU,mCACVC,EAAW,+BASJtB,EAAqBF,UAChC,MAAM,KAAEyB,SAAeC,EAAAA,EAAM5B,IAAI,GAAG0B,iBAAyB,CAC3DG,OAAQ,CAAEC,QAASL,EAAS1B,WAE9B,OAAO4B,EAAKxB,SAGD4B,EAAoB7B,UAC/B,MAAM,KAAEyB,SAAeC,EAAAA,EAAM5B,IAAI,GAAG0B,WAAkBM,IAAW,CAC/DH,OAAQ,CAAEC,QAASL,KAErB,OAAOE,GAGIM,EAAiB/B,UAC5B,MAAM,KAAEyB,SAAeC,EAAAA,EAAM5B,IAAI,GAAG0B,WAAkBM,YAAmB,CACvEH,OAAQ,CAAEC,QAASL,KAErB,OAAOE,EAAKO,MAGDC,EAAoBjC,UAC/B,MAAM,KAAEyB,SAAeC,EAAAA,EAAM5B,IAAI,GAAG0B,WAAkBM,YAAmB,CACvEH,OAAQ,CAAEC,QAASL,KAErB,OAAOE,EAAKxB,Q","sources":["pages/Movies.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from '../services/api';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetch = async () => {\n      try {\n        const results = await fetchMoviesByQuery(query);\n        setMovies(results);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n\n    fetch();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const value = e.target.elements.query.value.trim();\n    if (!value) return;\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input name=\"query\" defaultValue={query} />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>{movie.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '603c177ba1164b029d0f3b31548d47a9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: { api_key: API_KEY },\n  });\n  return data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}/search/movie`, {\n    params: { api_key: API_KEY, query },\n  });\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n    params: { api_key: API_KEY },\n  });\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: { api_key: API_KEY },\n  });\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY },\n  });\n  return data.results;\n};\n"],"names":["Movies","_searchParams$get","movies","setMovies","useState","searchParams","setSearchParams","useSearchParams","query","get","useEffect","async","results","fetchMoviesByQuery","error","console","fetch","_jsxs","children","onSubmit","e","preventDefault","value","target","elements","trim","_jsx","name","defaultValue","type","map","movie","title","id","API_KEY","BASE_URL","data","axios","params","api_key","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}